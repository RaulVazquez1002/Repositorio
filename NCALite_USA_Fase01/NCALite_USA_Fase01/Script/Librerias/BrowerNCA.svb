'USEUNIT KERNEL
'USEUNIT COMMON


' ---- LIBRERIA UTILIZADA PARA NAVEGADORES COMO CHROME / EDGE / FIREFO, EN CASO QUE IE DEJE DE FUNCIONAR
' ---- Se estara realizando prubas y comprobar que funcione correctamente
dim BrowNCA

if not IsObject(Edge) Then
  set BrowNCA = new EdgeSwagger
end If

class EdgeSwagger

  Private IeTab
  Private pageIe
  public BrowserProcess 'proceso navegador
  public BtBrower 'navegador a utilizar
  
   
  Private Sub Class_Initialize
  
'	 IeTab = "https://ncalite-dev.ternium.net/#/admin/docs" 	
'  set pageIe = TNT.Process(BrowserProcess)
  
  End Sub
  
  public sub Cerrar
    dim isClosed 
    set ie = sys.FindChild("ProcessName",BrowserProcess)
    
    while ie.Exists
      ie.close
      isClosed = ie.WaitProperty("Exists", False)
      if not isClosed then
        ie.terminate
      end if
      set ie = sys.FindChild("ProcessName",BrowserProcess)
    Wend
  end sub
  
  public sub Login(Page,SubPage)
  
    Cerrar
    Browsers.Item(BtBrower).Run(page)
    
    Delay(6000)
    set page = Sys.Browser(BrowserProcess).waitPage(SubPage,50000)
    
    set obj = page.NativeWebObject.Find("ObjectIdentifier","username")  
    if obj.Exists then
       obj.click
       obj.SetText "admin"
    end if
    
    set obj = page.NativeWebObject.Find("ObjectIdentifier","password")  
    if obj.Exists then
       obj.click
       obj.SetText "admin"
    end if
    
    set obj = page.NativeWebObject.Find("ObjectLabel","Iniciar sesión")
    if obj.Exists Then
      obj.Click
    end if
    
    set pageIe = TNT.Process(BrowserProcess)
        
  end sub
  
  public function WaitTabPage(Tab)
  
    set page = Sys.Browser(BrowserProcess).waitPage(Tab,50000)  
    if page.Exists then
      Log.Message "[successful]: page found"
      WaitTabPage = true
    Else
      Log.Error "[Error]: page not found"
      WaitTabPage = false
    end if
    
  end function
  
  public sub NodeTab(Tab)
  
    set page = Sys.Browser(BrowserProcess).waitPage(Tab,50000)  
    if page.Exists then
      Log.Message "[successful]: page found"
      IeTab = Tab
    Else
      Log.Error "[Error]: page not found"
    end if
    
  end sub
  
  public sub NavigateTab(Opcion)
  
    dim bool: bool = false  
    Delay(4000)
    for x = 0 to 300
      Delay(6000)
      set page = Sys.Browser(BrowserProcess).waitPage(IeTab,50000)
      set obj = page.NativeWebObject.Find("ObjectIdentifier","select_baseUrl")   
      if obj.Exists Then
        for i = 0 to obj.wItemCount
          if obj.wItem(i) = Opcion Then
            obj.ClickItem Opcion
            log.Message "[successful]: item selectd"
            bool = true
            exit for
          end if
        
          if i = obj.wItemCount Then
            Log.Error "[Error]: item not found"
          end if
        next
        
      Else
        log.Message "contador:"&x 
      end if
      
      if bool Then 
        exit for 
      end if
      
    next
       
  end sub
  
  Public Function waitObj(objId)
			
		if not pageIe.waitObject(objId,UTIL.getTimeOut) is Nothing then
			FunctionStatus = "[Existoso]"
			Log.Message FunctionAction & ": " & FunctionStatus
			waitObj = True
		else
			FunctionStatus = "[Error] "
			Log.Warning FunctionAction & ": " & FunctionStatus
			
			waitObj = False
		end if

	end Function
  
  public Function getTextNode(objId)
  
		if not pageIe.waitObject(objId,UTIL.getTimeOut) is nothing then
			set obj = pageIe.FindObject(objId)
			getText = obj.contentText
			FunctionOutput = obj.contentText
			FunctionStatus = "[Exitoso]"
			Log.Message FunctionAction & ": " & FunctionStatus
		else
			FunctionStatus = "[Error] "
			Log.Warning FunctionAction & ": " & FunctionStatus
			
		end if
    
	end Function
  
	public sub setFocus(objId)
  
    if not pageIe.waitObject(objId,UTIL.getTimeOut) is nothing then
			set obj = pageIe.FindObject(objId)
			obj.focus
			FunctionStatus = "[Successful]: Element found"
			Log.Message FunctionAction & ": " & FunctionStatus
		else
			FunctionStatus = "[Error]: Element not found "
			Log.Warning FunctionAction & ": " & FunctionStatus
		end if
    
  end sub
  
  public sub setTextTextArea(objId,vText)
  
    if not pageIe.waitObject(objId,UTIL.getTimeOut) is nothing then
			set obj = pageIe.FindObject(objId)
			obj.keys vText
			FunctionStatus = "[Sucessful]: Element found"
			Log.Message FunctionAction & ": " & FunctionStatus
		else
			FunctionStatus = "[Error]: Element not found "
			Log.Warning FunctionAction & ": " & FunctionStatus
		end if
    
  end sub
  
  public sub setTextNode(objId,vText)
  
    if not pageIe.waitObject(objId,UTIL.getTimeOut) is nothing then
			set obj = pageIe.FindObject(objId)
			obj.setText vText
			FunctionStatus = "[Sucessful]: Element found"
			Log.Message FunctionAction & ": " & FunctionStatus
		else
			FunctionStatus = "[Error]: Element not found "
			Log.Warning FunctionAction & ": " & FunctionStatus
		end if
    
  end sub
  
  public sub ClickObjNode(objId)
  
		if not pageIe.waitObject(objId,UTIL.getTimeOut) is nothing then
			set obj = pageIe.FindObject(objId)
			obj.click
			FunctionStatus = "[Successful]: Element found"
			Log.Message FunctionAction & ": " & FunctionStatus
		else
			FunctionStatus = "[Error]: Element not found "
			Log.Warning FunctionAction & ": " & FunctionStatus
		end if
    
  end sub

  public sub setPrincipalPage()
  
    set pageIe = TNT.Process(BrowserProcess) '.Window(IeTab)'"https://ncalite-dev.ternium.net/#/admin/docs"
    
  end sub
  
  public Sub setNode(objProperty)
  
		set pageIe = pageIe.WaitNode(objProperty,UTIL.getTimeOut)
    
    if pageIe is nothing then
			FunctionStatus = "Error: Node: " & objProperty & " no encontrado"
			
			Log.Warning FunctionStatus
		else
			FunctionStatus = "Exitoso : Node " & objProperty & " encontrado"
			Log.Message FunctionStatus
		end if
		FunctionStatus = ""

	End Sub
  
  
  '------------------------ Functions Node Principal Page Opcional --------------------
  public sub ClickObjPrincipal(objId)
  
    uriArray = split(objId,":=")
    set page = Sys.Browser(BrowserProcess).waitPage(IeTab,50000)
    set obj = page.NativeWebObject.Find(uriArray(0),uriArray(1))
    obj.Focus
    obj.Click
    
  end sub
  
  public sub SetTextAreaPrincipal(objId,vText)
  
    uriArray = split(objId,":=")
    set page = Sys.Browser(BrowserProcess).waitPage(IeTab,50000)
    set obj = page.NativeWebObject.Find(uriArray(0),uriArray(1))
    obj.Click
    
    set keys = CreateObject("wscript.shell")
    keys.sendKeys "^a" '"^e"
    keys.sendKeys "{DEL}"
    
    obj.keys vText
    
  end sub
  
  public sub SetTextPrincipal(objId,vText)
  
    uriArray = split(objId,":=")
    set page = Sys.Browser(BrowserProcess).waitPage(IeTab,50000)
    set obj = page.NativeWebObject.Find(uriArray(0),uriArray(1))
    obj.setText vText
    
  end sub
  
  public function GetTextPrincipal(objId)
  
    uriArray = split(objId,":=")
    set page = Sys.Browser(BrowserProcess).waitPage(IeTab,50000)
    set obj = page.NativeWebObject.Find(uriArray(0),uriArray(1))
    GetTextPrincipal = obj.contentText
    
  end function
  
end class  